{"ast":null,"code":"var _jsxFileName = \"/media/Alex/Proyectos/JUNGLE-OF-RECIPES/client/src/components/Home/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, Fragment } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterRecipeADS, filterRecipeBYDiet, getRecipe, getRecipeName, getDietType } from \"../../actions\";\nimport Card from \"../Card/Card\";\nimport Paginado from \"./Paginado\";\nimport { DocumentName } from \"../../support/diets.jsx\";\nimport \"../../styles/Home.css\";\nimport ButtonRender from \"../common/Button.jsx\";\nimport \"../../styles/NavRadio.css\";\nimport RenderNavBar from \"../common/BarNav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const dispatch = useDispatch();\n  const allRecipies = useSelector(state => state.recipes);\n  const diets = useSelector(state => state.diets);\n  const [input, setInput] = useState(\"\"); //Estado local\n\n  const [order, setOrder] = useState(\"\"); //Seteo de cantidad de recetas por pagina\n\n  const [currentPage, setCurrentPage] = useState(1); //Pagina actual\n\n  const [recipesPerPage, setRecipesPerPage] = useState(9); //Cantidad de recetas por pagina\n\n  const indexOfLastRecipe = currentPage * recipesPerPage; //9\n\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage; //0--9--18--\n\n  const currentRecipes = allRecipies.slice(indexOfFirstRecipe, indexOfLastRecipe);\n  useEffect(() => {\n    dispatch(getRecipe());\n    dispatch(getDietType());\n  }, [dispatch]);\n  var n = 0; //Setea la cantidad de paginas renderizadas\n\n  const paginado = pageNumber => {\n    n = pageNumber;\n    setCurrentPage(pageNumber);\n  };\n\n  console.log(currentPage); //Volver a cargar pagina\n\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getRecipe());\n    dispatch(getDietType());\n  } //Funcion que filtra por dietas\n\n\n  function handleFilter(e) {\n    e.preventDefault();\n    dispatch(filterRecipeBYDiet(e.target.value));\n    setCurrentPage(1); //Con esto le digo que se ubique en la page 1\n  } //Funcion que buscar receta por name\n\n\n  function handleSearch(e) {\n    e.preventDefault();\n\n    if (!input) {\n      alert(\"Debe colocar un nombre\");\n    } else {\n      dispatch(getRecipeName(input)); // setCurrentPage(1)\n    } // // setCurrentPage(1);\n    // setOrder(e.target.value)\n\n\n    setInput(\"\");\n  } //Function guarda el estado del imput\n\n\n  function handleChange(e) {\n    e.preventDefault();\n    setInput(e.target.value);\n  } //Funcion que ORDENA\n\n\n  function handleOrder(e) {\n    e.preventDefault();\n    dispatch(filterRecipeADS(e.target.value));\n    setCurrentPage(1); //Con esto le digo que se ubique en la page 1\n\n    setOrder(e.target.value);\n  }\n\n  console.log('Home', currentRecipes); // console.log(diets)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"frame-home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hedear-filters-search\",\n      children: [/*#__PURE__*/_jsxDEV(RenderNavBar, {\n        nav: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-home\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-filter-home\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-asc\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-filter\",\n              value: \"asc\",\n              onClick: e => handleOrder(e),\n              children: \"A-Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-score\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-filter\",\n              value: \"score\",\n              onClick: e => handleOrder(e),\n              children: \"Puntuacion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-desc\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-filter\",\n              value: \"desc\",\n              onClick: e => handleOrder(e),\n              children: \"Z-A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-search-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Buscar por nombre de receta\",\n            name: \"name\",\n            onChange: e => handleChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSearch(e),\n            className: \"btn-search\",\n            children: \"Buscar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => handleFilter(e),\n          className: \"selection-home\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Tipo de Dietas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), diets === null || diets === void 0 ? void 0 : diets.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: e.name,\n              children: DocumentName(e.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conteiner-paginado\",\n        children: /*#__PURE__*/_jsxDEV(Paginado, {\n          recipesPerPage: recipesPerPage,\n          allRecipies: allRecipies.length,\n          paginado: paginado,\n          m: currentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-body-card\",\n      children: currentRecipes[0] ? currentRecipes.map(e => {\n        if (e) {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-card\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                name: e.name,\n                img: e.img,\n                diets: e.diets,\n                dishTypes: e.dishTypes,\n                id: e.id,\n                score: e.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this);\n        }\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.gifer.com/VAyR.gif\",\n          alt: \"Not Found GIF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"BTiB1i0PA5M0ZiLtflGlviOhmZE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/media/Alex/Proyectos/JUNGLE-OF-RECIPES/client/src/components/Home/Home.jsx"],"names":["React","Fragment","Link","NavLink","useState","useEffect","useDispatch","useSelector","filterRecipeADS","filterRecipeBYDiet","getRecipe","getRecipeName","getDietType","Card","Paginado","DocumentName","ButtonRender","RenderNavBar","Home","dispatch","allRecipies","state","recipes","diets","input","setInput","order","setOrder","currentPage","setCurrentPage","recipesPerPage","setRecipesPerPage","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","n","paginado","pageNumber","console","log","handleClick","e","preventDefault","handleFilter","target","value","handleSearch","alert","handleChange","handleOrder","map","name","length","img","dishTypes","id","score"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,kBAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,WALF,QAMO,eANP;AAOA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAO,uBAAP;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAO,2BAAP;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,WAAW,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA/B;AACA,QAAMC,KAAK,GAAGhB,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACE,KAAlB,CAAzB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC,CAJ6B,CAIW;;AACxC,QAAM,CAACsB,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC,CAL6B,CAO7B;;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,CAAD,CAA9C,CAR6B,CAQsB;;AACnD,QAAM,CAAC0B,cAAD,EAAiBC,iBAAjB,IAAsC3B,QAAQ,CAAC,CAAD,CAApD,CAT6B,CAS4B;;AACzD,QAAM4B,iBAAiB,GAAGJ,WAAW,GAAGE,cAAxC,CAV6B,CAU2B;;AACxD,QAAMG,kBAAkB,GAAGD,iBAAiB,GAAGF,cAA/C,CAX6B,CAWkC;;AAC/D,QAAMI,cAAc,GAAGd,WAAW,CAACe,KAAZ,CACrBF,kBADqB,EAErBD,iBAFqB,CAAvB;AAKA3B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACAS,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,GAHQ,EAGN,CAACO,QAAD,CAHM,CAAT;AAKA,MAAIiB,CAAC,GAAG,CAAR,CAtB6B,CAuB7B;;AACA,QAAMC,QAAQ,GAAIC,UAAD,IAAgB;AAC/BF,IAAAA,CAAC,GAAGE,UAAJ;AACAT,IAAAA,cAAc,CAACS,UAAD,CAAd;AACD,GAHD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ,EA7B6B,CA8B7B;;AACA,WAASa,WAAT,CAAqBC,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAxB,IAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACAS,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,GAnC4B,CAqC7B;;;AACA,WAASgC,YAAT,CAAsBF,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAxB,IAAAA,QAAQ,CAACV,kBAAkB,CAACiC,CAAC,CAACG,MAAF,CAASC,KAAV,CAAnB,CAAR;AACAjB,IAAAA,cAAc,CAAC,CAAD,CAAd,CAHuB,CAGJ;AACpB,GA1C4B,CA4C7B;;;AACA,WAASkB,YAAT,CAAsBL,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACnB,KAAL,EAAY;AACVwB,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAFD,MAEO;AACL7B,MAAAA,QAAQ,CAACR,aAAa,CAACa,KAAD,CAAd,CAAR,CADK,CAEL;AACD,KAPsB,CAQvB;AACA;;;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAxD4B,CA0D7B;;;AACA,WAASwB,YAAT,CAAsBP,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAlB,IAAAA,QAAQ,CAACiB,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD,GA9D4B,CAgE7B;;;AACA,WAASI,WAAT,CAAqBR,CAArB,EAAwB;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAxB,IAAAA,QAAQ,CAACX,eAAe,CAACkC,CAAC,CAACG,MAAF,CAASC,KAAV,CAAhB,CAAR;AACAjB,IAAAA,cAAc,CAAC,CAAD,CAAd,CAHsB,CAGH;;AACnBF,IAAAA,QAAQ,CAACe,CAAC,CAACG,MAAF,CAASC,KAAV,CAAR;AACD;;AACDP,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBN,cAAnB,EAvE6B,CAwE7B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACE,QAAC,YAAD;AAAc,QAAA,GAAG,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,YADZ;AAEE,cAAA,KAAK,EAAC,KAFR;AAGE,cAAA,OAAO,EAAGQ,CAAD,IAAOQ,WAAW,CAACR,CAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,YADZ;AAEE,cAAA,KAAK,EAAC,OAFR;AAGE,cAAA,OAAO,EAAGA,CAAD,IAAOQ,WAAW,CAACR,CAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF,eAmBE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,YADZ;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,OAAO,EAAGA,CAAD,IAAOQ,WAAW,CAACR,CAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA8BE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,6BAFd;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,QAAQ,EAAGA,CAAD,IAAOO,YAAY,CAACP,CAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,OAAO,EAAGA,CAAD,IAAOK,YAAY,CAACL,CAAD,CAF9B;AAGE,YAAA,SAAS,EAAC,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,eA6CE;AAAQ,UAAA,QAAQ,EAAGA,CAAD,IAAOE,YAAY,CAACF,CAAD,CAArC;AAA0C,UAAA,SAAS,EAAC,gBAApD;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGnB,KAFH,aAEGA,KAFH,uBAEGA,KAAK,CAAE4B,GAAP,CAAYT,CAAD,IAAO;AACjB,gCAAO;AAAQ,cAAA,KAAK,EAAEA,CAAC,CAACU,IAAjB;AAAA,wBAAwBrC,YAAY,CAAC2B,CAAC,CAACU,IAAH;AAApC;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAuDE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,cAAc,EAAEtB,cADlB;AAEE,UAAA,WAAW,EAAEV,WAAW,CAACiC,MAF3B;AAGE,UAAA,QAAQ,EAAEhB,QAHZ;AAIE,UAAA,CAAC,EAAET;AAJL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGM,cAAc,CAAC,CAAD,CAAd,GACCA,cAAc,CAACiB,GAAf,CAAoBT,CAAD,IAAO;AACxB,YAAIA,CAAJ,EAAO;AACL,8BACE,QAAC,QAAD;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,qCACE,QAAC,IAAD;AACE,gBAAA,IAAI,EAAEA,CAAC,CAACU,IADV;AAEE,gBAAA,GAAG,EAAEV,CAAC,CAACY,GAFT;AAGE,gBAAA,KAAK,EAAEZ,CAAC,CAACnB,KAHX;AAIE,gBAAA,SAAS,EAAEmB,CAAC,CAACa,SAJf;AAKE,gBAAA,EAAE,EAAEb,CAAC,CAACc,EALR;AAME,gBAAA,KAAK,EAAEd,CAAC,CAACe;AANX;AAAA;AAAA;AAAA;AAAA;AADF,eAAgCf,CAAC,CAACc,EAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD;AACF,OAjBD,CADD,gBAoBC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAC,8BAAT;AAAwC,UAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,YAjEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+FD;;GAzKuBtC,I;UACLZ,W,EACGC,W,EACNA,W;;;KAHQW,I","sourcesContent":["import { React, Fragment } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  filterRecipeADS,\n  filterRecipeBYDiet,\n  getRecipe,\n  getRecipeName,\n  getDietType,\n} from \"../../actions\";\nimport Card from \"../Card/Card\";\nimport Paginado from \"./Paginado\";\nimport { DocumentName } from \"../../support/diets.jsx\";\nimport \"../../styles/Home.css\";\nimport ButtonRender from \"../common/Button.jsx\";\nimport \"../../styles/NavRadio.css\";\nimport RenderNavBar from \"../common/BarNav\";\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const allRecipies = useSelector((state) => state.recipes);\n  const diets = useSelector((state) => state.diets);\n  const [input, setInput] = useState(\"\"); //Estado local\n  const [order, setOrder] = useState(\"\");\n\n  //Seteo de cantidad de recetas por pagina\n  const [currentPage, setCurrentPage] = useState(1); //Pagina actual\n  const [recipesPerPage, setRecipesPerPage] = useState(9); //Cantidad de recetas por pagina\n  const indexOfLastRecipe = currentPage * recipesPerPage; //9\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage; //0--9--18--\n  const currentRecipes = allRecipies.slice(\n    indexOfFirstRecipe,\n    indexOfLastRecipe\n  );\n\n  useEffect(() => {\n    dispatch(getRecipe());\n    dispatch(getDietType());\n  }, [dispatch]);\n\n  var n = 0;\n  //Setea la cantidad de paginas renderizadas\n  const paginado = (pageNumber) => {\n    n = pageNumber;\n    setCurrentPage(pageNumber);\n  };\n\n  console.log(currentPage);\n  //Volver a cargar pagina\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getRecipe());\n    dispatch(getDietType());\n  }\n\n  //Funcion que filtra por dietas\n  function handleFilter(e) {\n    e.preventDefault();\n    dispatch(filterRecipeBYDiet(e.target.value));\n    setCurrentPage(1); //Con esto le digo que se ubique en la page 1\n  }\n\n  //Funcion que buscar receta por name\n  function handleSearch(e) {\n    e.preventDefault();\n    if (!input) {\n      alert(\"Debe colocar un nombre\");\n    } else {\n      dispatch(getRecipeName(input));\n      // setCurrentPage(1)\n    }\n    // // setCurrentPage(1);\n    // setOrder(e.target.value)\n    setInput(\"\");\n  }\n\n  //Function guarda el estado del imput\n  function handleChange(e) {\n    e.preventDefault();\n    setInput(e.target.value);\n  }\n\n  //Funcion que ORDENA\n  function handleOrder(e) {\n    e.preventDefault();\n    dispatch(filterRecipeADS(e.target.value));\n    setCurrentPage(1); //Con esto le digo que se ubique en la page 1\n    setOrder(e.target.value);\n  }\n  console.log('Home',currentRecipes)\n  // console.log(diets)\n\n  return (\n    <div className=\"frame-home\">\n      <div className=\"hedear-filters-search\">\n        <RenderNavBar nav=\"2\" />\n\n        <div className=\"header-home\">\n          <div className=\"btn-filter-home\">\n            <div className=\"btn-asc\">\n              <button\n                className=\"btn-filter\"\n                value=\"asc\"\n                onClick={(e) => handleOrder(e)}\n              >\n                A-Z\n              </button>\n            </div>\n            <div className=\"btn-score\">\n              <button\n                className=\"btn-filter\"\n                value=\"score\"\n                onClick={(e) => handleOrder(e)}\n              >\n                Puntuacion\n              </button>\n            </div>\n            <div className=\"btn-desc\">\n              <button\n                className=\"btn-filter\"\n                value=\"desc\"\n                onClick={(e) => handleOrder(e)}\n              >\n                Z-A\n              </button>\n            </div>\n          </div>\n          <div className=\"header-search-btn\">\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nombre de receta\"\n              name=\"name\"\n              onChange={(e) => handleChange(e)}\n            />\n            <button\n              type=\"submit\"\n              onClick={(e) => handleSearch(e)}\n              className=\"btn-search\"\n            >\n              Buscar\n            </button>\n          </div>\n          <select onChange={(e) => handleFilter(e)} className=\"selection-home\">\n            <option>Tipo de Dietas</option>\n            {diets?.map((e) => {\n              return <option value={e.name}>{DocumentName(e.name)}</option>;\n            })}\n          </select>\n        </div>\n        <div className=\"conteiner-paginado\">\n          <Paginado\n            recipesPerPage={recipesPerPage}\n            allRecipies={allRecipies.length}\n            paginado={paginado}\n            m={currentPage}\n          />\n        </div>\n      </div>\n      <div className=\"home-body-card\">\n        {currentRecipes[0] ? \n          currentRecipes.map((e) => {\n            if (e) {\n              return (\n                <Fragment>\n                  <div className=\"home-card\" key={e.id}>\n                    <Card\n                      name={e.name}\n                      img={e.img}\n                      diets={e.diets}\n                      dishTypes={e.dishTypes}\n                      id={e.id}\n                      score={e.score}\n                    />\n                  </div>\n                </Fragment>\n              );\n            }\n          })\n         : \n          <div className=\"loading\">\n            <img src=\"https://i.gifer.com/VAyR.gif\" alt=\"Not Found GIF\" />\n            <span> Loading</span>\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}