{"ast":null,"code":"var _jsxFileName = \"/media/Alex/Proyectos/JUNGLE-OF-RECIPES/client/src/components/Create/CreateRecipe.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { getDietType, postRecipe } from \"../../actions\";\nimport { DocumentName } from \"../../support/diets\";\nimport { validateRecipe, validateAdds } from \"../../support/validate\";\nimport \"../../styles/Created.css\";\nimport CardDetails from \"../Card/CardDetails\";\nimport RenderNavBar from \"../common/BarNav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateRecipe() {\n  _s();\n\n  var _input$step, _input$dishTypes;\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [dataForm, setForm] = useState({\n    step: '',\n    dishTypes: ''\n  });\n  const diets = useSelector(state => state.diets);\n  const [errors, setErrors] = useState({});\n  var flags = false;\n  const [input, setInput] = useState({\n    name: '',\n    summary: '',\n    score: '',\n    health: '',\n    diets: [],\n    step: [],\n    dishTypes: [],\n    img: ''\n  });\n  useEffect(() => {\n    dispatch(getDietType());\n  }, [dispatch]);\n\n  function handlerChange(e) {\n    setInput({ ...input,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validateRecipe({ ...input,\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  function handlerForm(e) {\n    setForm({ ...dataForm,\n      [e.target.name]: e.target.value\n    });\n    setErrors(validateAdds({ ...input,\n      step: [...input.step, dataForm.step]\n    }));\n  }\n\n  function handlerCheck(e) {\n    if (e.target.checked && e.target.defaultValue) {\n      setInput({ ...input,\n        diets: [...input.diets, e.target.value]\n      });\n      setErrors(validateRecipe({ ...input,\n        diets: [...input.diets, e.target.value]\n      }));\n    } else {\n      var name = e.target.defaultValue;\n      setInput({ ...input,\n        diets: input.diets.filter(e => e !== name)\n      });\n      setErrors(validateRecipe({ ...input,\n        diets: input.diets.filter(e => e !== name)\n      }));\n    }\n  }\n\n  function handleAddStep(e) {\n    if (e.target.id === \"step\") {\n      if (dataForm.step === '' || dataForm.step === ' ') {\n        alert(\"Agregar un paso de la receta\");\n      } else {\n        setInput({ ...input,\n          step: [...input.step, dataForm.step]\n        });\n        setErrors(validateAdds({ ...input,\n          step: [...input.step, dataForm.step]\n        }));\n      }\n    } else {\n      if (dataForm.dishTypes === \"\" || dataForm.dishTypes === \" \") {\n        alert(\"Agregar un tipo de plato\");\n      } else {\n        setInput({ ...input,\n          dishTypes: [...input.dishTypes, dataForm.dishTypes]\n        });\n        setErrors(validateAdds({ ...input,\n          dishTypes: [...input.dishTypes, dataForm.dishTypes]\n        }));\n      }\n    }\n\n    setForm({\n      step: '',\n      dishTypes: ''\n    });\n  }\n\n  function handleClear(e) {\n    var name = e.target.id;\n\n    if (e.target.name === \"step\") {\n      setInput({ ...input,\n        step: input.step.filter(e => e !== name)\n      });\n    } else {\n      setInput({ ...input,\n        dishTypes: input.dishTypes.filter(e => e !== name)\n      });\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const err = validateRecipe(input);\n    const errb = validateAdds(input);\n\n    if (!err.flags || !errb.flags) {\n      alert(\"Hay campos por seleccionar\");\n    } else {\n      dispatch(postRecipe(input));\n      alert(\"Receta creada con exito\");\n      setInput({\n        name: '',\n        summary: '',\n        score: '',\n        health: '',\n        diets: [],\n        step: [],\n        dishTypes: [],\n        img: ''\n      });\n      history.push('/home');\n    }\n\n    ;\n  }\n\n  ;\n\n  function handlePreVisual(e) {\n    e.preventDefault();\n    flags = true;\n    console.log('Entra');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"frame-nav-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navBar\",\n      children: /*#__PURE__*/_jsxDEV(RenderNavBar, {\n        nav: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"frame-createdRecipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-frame-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Tipos de dietas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this), diets === null || diets === void 0 ? void 0 : diets.map(e => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" \", DocumentName(e.name)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: e.name,\n                value: e.name,\n                onChange: e => handlerCheck(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 25\n              }, this)]\n            }, e.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), errors.diets && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.diets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frame-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nombre de la receta\",\n              name: \"name\",\n              value: input.name,\n              onChange: handlerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [errors.summary && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              cols: \"23\",\n              row: \"40\",\n              name: \"summary\",\n              placeholder: \"Resumen del plato\",\n              value: input.summary,\n              onChange: handlerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [errors.score && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Puntuacion\",\n              name: \"score\",\n              value: input.score,\n              onChange: handlerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [errors.health && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors.health\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Nivel de comida saludable\",\n              name: \"health\",\n              value: input.health,\n              onChange: handlerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Imagen\",\n              name: \"img\",\n              value: input.img,\n              onChange: handlerChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), errors.step && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.step\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Paso a paso\",\n                name: \"step\",\n                value: dataForm.step,\n                onChange: handlerForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-add\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                id: \"step\",\n                onClick: e => handleAddStep(e),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_input$step = input.step) === null || _input$step === void 0 ? void 0 : _input$step.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toast\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"close\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    id: e,\n                    name: \"step\",\n                    onClick: e => handleClear(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message\",\n                  children: e\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), errors.dishTypes && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.dishTypes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dish-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Tipo de plato\",\n                name: \"dishTypes\",\n                value: dataForm.dishTypes,\n                onChange: handlerForm\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-add\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                id: \"dishTypes\",\n                onClick: e => handleAddStep(e),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_input$dishTypes = input.dishTypes) === null || _input$dishTypes === void 0 ? void 0 : _input$dishTypes.map(e => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"toast\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"close\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    id: e,\n                    name: \"dishTypes\",\n                    onClick: e => handleClear(e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message\",\n                  children: e\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-created\",\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            children: \"Crear Receta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frame-previsual\",\n        children: !flags && CardDetails(input)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateRecipe, \"w6pMTGD5QTGue3aRoyuejCEQSdo=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = CreateRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRecipe\");","map":{"version":3,"sources":["/media/Alex/Proyectos/JUNGLE-OF-RECIPES/client/src/components/Create/CreateRecipe.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","NavLink","useHistory","getDietType","postRecipe","DocumentName","validateRecipe","validateAdds","CardDetails","RenderNavBar","CreateRecipe","dispatch","history","dataForm","setForm","step","dishTypes","diets","state","errors","setErrors","flags","input","setInput","name","summary","score","health","img","handlerChange","e","target","value","handlerForm","handlerCheck","checked","defaultValue","filter","handleAddStep","id","alert","handleClear","handleSubmit","preventDefault","err","errb","push","handlePreVisual","console","log","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink,useHistory } from \"react-router-dom\";\nimport { getDietType, postRecipe } from \"../../actions\";\nimport {DocumentName} from \"../../support/diets\";\nimport {validateRecipe, validateAdds} from \"../../support/validate\";\nimport \"../../styles/Created.css\"\nimport CardDetails from \"../Card/CardDetails\";\nimport RenderNavBar from \"../common/BarNav\";\n\n\nexport default function CreateRecipe (){\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [dataForm, setForm]=useState({ step:'', dishTypes:''});\n    const diets = useSelector(state => state.diets);\n    const [errors, setErrors] = useState({});\n    var flags= false\n    const [input, setInput] = useState({\n        name:'', \n        summary:'', \n        score:'', \n        health:'', \n        diets:[],\n        step:[],\n        dishTypes:[],\n        img:''\n    })\n\n    useEffect(() => {\n        dispatch(getDietType());\n    },[dispatch])\n    \n    function handlerChange(e){\n        setInput({\n            ...input,\n            [e.target.name] : e.target.value\n        });\n        setErrors(validateRecipe({\n            ...input,\n            [e.target.name]: e.target.value\n        }));\n    }\n\n    function handlerForm(e){\n        setForm({\n            ...dataForm,\n            [e.target.name] : e.target.value\n        })\n        setErrors(validateAdds({\n            ...input,\n            step: [...input.step,dataForm.step]\n             }))\n    }\n\n    function handlerCheck(e){\n        if(e.target.checked && e.target.defaultValue ){\n           setInput({\n               ...input,\n               diets: [...input.diets,e.target.value]\n           })\n           setErrors(validateRecipe(({\n            ...input,\n            diets: [...input.diets,e.target.value]\n        })));\n        }else{\n            var name =  e.target.defaultValue\n            setInput({\n                ...input,\n                diets: input.diets.filter(e => e !==  name)\n            })\n            setErrors(validateRecipe({\n                ...input,\n                diets: input.diets.filter(e => e !==  name)\n            }))\n        }\n    }\n\n    function handleAddStep(e){\n        if(e.target.id === \"step\"){\n            if(dataForm.step === '' || dataForm.step === ' ' ){\n                alert(\"Agregar un paso de la receta\");\n            }else{\n                setInput({\n                    ...input,\n                    step: [...input.step,dataForm.step]\n                     })\n                setErrors(validateAdds({\n                    ...input,\n                    step: [...input.step,dataForm.step]\n                     }))\n            }\n        }else{\n            if(dataForm.dishTypes === \"\" || dataForm.dishTypes === \" \"){\n                alert(\"Agregar un tipo de plato\");\n            }else{\n                setInput({\n                    ...input,\n                    dishTypes: [...input.dishTypes,dataForm.dishTypes]\n                })\n                setErrors(validateAdds({\n                    ...input,\n                    dishTypes: [...input.dishTypes,dataForm.dishTypes]\n                }))\n            }}\n            setForm({step:'',dishTypes:''})\n    }\n\n    function handleClear(e){\n        var name = e.target.id\n        if(e.target.name === \"step\"){\n            setInput({\n                ...input,\n                step: input.step.filter(e => e !==  name)\n            })\n        }else{\n            setInput({\n                ...input,\n                dishTypes: input.dishTypes.filter(e => e !==  name)\n            })\n        }\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        const err = validateRecipe(input)\n        const errb = validateAdds(input)\n        if(!err.flags || !errb.flags){\n            alert(\"Hay campos por seleccionar\");\n        }else{\n            dispatch(postRecipe(input));\n            alert(\"Receta creada con exito\");\n            setInput({\n                name:'', \n                summary:'', \n                score:'', \n                health:'', \n                diets:[],\n                step:[],\n                dishTypes:[],\n                img:''\n            });\n            history.push('/home')\n        };\n    };\n\n    function handlePreVisual(e){\n        e.preventDefault();\n        flags = true\n        console.log('Entra')\n    }\n\n    return(\n     \n        <div className=\"frame-nav-bar\">\n        <div className=\"navBar\">\n           <RenderNavBar nav=\"1\"/>\n        </div>\n        <div className=\"frame-createdRecipe\">\n            <div className=\"body-frame-input\">\n                    <div className=\"input-check\">\n                    <h3>Tipos de dietas</h3>\n                    {diets?.map(e => {\n                    return(\n                        <div key={e.id}  >\n                      <span> {DocumentName(e.name)}</span> \n                        <input \n                            type='checkbox' \n                            name={e.name} \n                            value={e.name} \n                            onChange={(e)=> handlerCheck(e)}/>\n                        </div>\n                    )\n                    })}\n                    </div>\n                {errors.diets && (\n                    <p>{errors.diets}</p>\n                )}      \n            <div className=\"frame-input\">\n            <div >\n             {errors.name && (\n                    <p>{errors.name}</p>\n                )}\n                <input \n                  type='text'\n                  placeholder='Nombre de la receta'\n                  name='name'\n                  value={input.name}\n                  onChange={handlerChange}\n                />\n            </div>\n            <div>\n                {errors.summary && (\n                      <p>{errors.summary}</p>\n                )}\n                <textarea \n                  type='text'\n                  cols='23'\n                  row='40'\n                  name='summary'\n                  placeholder='Resumen del plato'\n                  value={input.summary}\n                  onChange={handlerChange}>\n                </textarea>\n               \n            </div>\n            <div>\n                {errors.score && (\n                      <p>{errors.score}</p>\n                 )}\n                <input \n                  type='number'\n                  placeholder='Puntuacion'\n                  name='score'\n                  value={input.score}\n                  onChange={handlerChange}\n                />\n               \n            </div>\n            <div>\n                {errors.health && (\n                      <p>{errors.health}</p>\n                )}\n                <input \n                   type='number'\n                   placeholder='Nivel de comida saludable'\n                   name='health'\n                   value= {input.health}\n                   onChange={handlerChange}\n                />\n             \n            </div>\n            <div>\n                 <input \n                    type='text'\n                    placeholder='Imagen'\n                    name='img'\n                    value= {input.img}\n                    onChange={handlerChange}\n                />\n            </div>\n            {errors.step && (\n                      <p>{errors.step}</p>\n            )}\n            <div className=\"step-input\">\n            <div>\n                <input \n                    type='text'\n                    placeholder='Paso a paso'\n                    name='step'\n                    value={dataForm.step}\n                    onChange={handlerForm}\n                />\n               \n            </div>\n            <div className=\"btn-add\">\n                <button type='submit' id='step' onClick={e => handleAddStep(e)}>Add</button>\n            </div>         \n            <div>            \n            </div>\n            </div>\n            <div >\n                {input.step?.map(e => {\n                    return(\n                        <div className=\"toast\">\n                        <div className=\"close\">\n                        <button type='submit' id={e} name='step' onClick={e => handleClear(e)}></button>\n                        </div>\n                        <div className=\"message\">\n                          {e}\n                        </div>\n                        </div>\n                    )\n                } )}\n            </div>\n            {errors.dishTypes && (\n                      <p>{errors.dishTypes}</p>\n                  )}\n            <div className=\"dish-input\">\n            <div >            \n                 <input \n                    type='text'\n                    placeholder='Tipo de plato'\n                    name='dishTypes'\n                    value={dataForm.dishTypes}\n                    onChange={handlerForm}\n                />\n            </div>\n            <div className=\"btn-add\">\n                <button type='submit' id='dishTypes' onClick={e => handleAddStep(e)}>Add</button>\n            </div>\n            </div>\n            <div>\n                {input.dishTypes?.map(e => {\n                    return(\n                        <div className=\"toast\">\n                        <div className=\"close\">\n                        <button type='submit' id={e} name='dishTypes' onClick={e => handleClear(e)}></button>\n                        </div>\n                        <div className=\"message\">\n                          {e}\n                        </div>\n                        </div>\n                    )\n                } )}\n            </div>\n                <button className=\"btn-created\" type='submit' onClick={e => handleSubmit(e)}>Crear Receta</button>\n                {/* <button className=\"btn-created\" type='submit' onClick={e => handlePreVisual(e)}>Pre-Visual</button> */}\n            \n            </div>\n            </div>\n            <div className=\"frame-previsual\">\n            { !flags && (\n                CardDetails(input)\n            )}\n            </div>\n        </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}