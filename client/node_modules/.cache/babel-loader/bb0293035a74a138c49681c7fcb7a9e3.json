{"ast":null,"code":"import axios from \"axios\"; //Aca estoy obteniendo las recetas\n\nexport function getRecipe() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/mongo/recipes\");\n      return dispatch({\n        type: \"GET_RECIPE\",\n        payload: json.data\n      });\n    } catch (e) {\n      console.log(\"Error al llamar api getAll\", e);\n    }\n  };\n}\nexport function getRecipeAllID(payload) {\n  return {\n    type: \"GET_RECIPE_ID_ALL\",\n    payload\n  };\n}\nexport function getRecipeName(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/mongo/recipes?name=\" + name);\n      return dispatch({\n        type: \"GET_RECIPE_NAME\",\n        payload: json.data\n      });\n    } catch (e) {\n      console.log(\"Error en la api-DB: \", e);\n      alert(\"Error no existe receta con ese name\");\n    }\n  };\n}\nexport function getRecipeID(id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(`http://localhost:3001/mongo/recipes/${id}`);\n      return dispatch({\n        type: \"GET_RECIPE_ID\",\n        payload: json.data\n      });\n    } catch (e) {\n      console.log(\"Error en la id de la receta\", e); // alert(\"Error no existe receta con ese id\");\n    }\n  };\n}\nexport function getDietType() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/mongo/types\");\n      console.log(json);\n      console.log(\"entraaaaa\");\n      return dispatch({\n        type: \"GET_DIET_TYPE\",\n        payload: json.data\n      });\n    } catch (error) {\n      console.log(\"Error en api front\", error);\n    } // return fetch('http://localhost:3001/types')\n    // .then(response => response.json())\n    // .then(diets =>{\n    //     dispatch({\n    //         type:'GET_DIET_TYPE',\n    //         payload:diets\n    //     })\n    // } )\n    // .catch(e =>{\n    //     console.log('Error en api front',e)\n    // })\n    // }\n\n  };\n}\nexport function filterRecipeBYDiet(payload) {\n  return {\n    type: \"FILTER_RECIPE_DIET\",\n    payload\n  };\n}\nexport function filterRecipeADS(payload) {\n  return {\n    type: \"FILTER_RECIPE_ADS\",\n    payload\n  };\n}\nexport function postRecipe(payload) {\n  return async function (dispatch) {\n    const data = await axios.post(\"http://localhost:3001/mongo/recipe\", payload);\n    return data;\n  };\n}","map":{"version":3,"sources":["/media/Alex/Proyectos/JUNGLE-OF-RECIPES/client/src/actions/index.js"],"names":["axios","getRecipe","dispatch","json","get","type","payload","data","e","console","log","getRecipeAllID","getRecipeName","name","alert","getRecipeID","id","getDietType","error","filterRecipeBYDiet","filterRecipeADS","postRecipe","post"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n//Aca estoy obteniendo las recetas\nexport function getRecipe() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/mongo/recipes\");\n      return dispatch({\n        type: \"GET_RECIPE\",\n        payload: json.data,\n      });\n    } catch (e) {\n      console.log(\"Error al llamar api getAll\", e);\n    }\n  };\n}\n\nexport function getRecipeAllID(payload) {\n  return {\n    type: \"GET_RECIPE_ID_ALL\",\n    payload,\n  };\n}\n\nexport function getRecipeName(name) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/mongo/recipes?name=\" + name);\n      return dispatch({\n        type: \"GET_RECIPE_NAME\",\n        payload: json.data,\n      });\n    } catch (e) {\n      console.log(\"Error en la api-DB: \", e);\n      alert(\"Error no existe receta con ese name\");\n    }\n  };\n}\n\nexport function getRecipeID(id) {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(`http://localhost:3001/mongo/recipes/${id}`);\n      return dispatch({\n        type: \"GET_RECIPE_ID\",\n        payload: json.data,\n      });\n    } catch (e) {\n      console.log(\"Error en la id de la receta\", e);\n      // alert(\"Error no existe receta con ese id\");\n    }\n  };\n}\n\nexport function getDietType() {\n  return async function (dispatch) {\n    try {\n      var json = await axios.get(\"http://localhost:3001/mongo/types\");\n      console.log(json);\n      console.log(\"entraaaaa\");\n      return dispatch({\n        type: \"GET_DIET_TYPE\",\n        payload: json.data,\n      });\n    } catch (error) {\n      console.log(\"Error en api front\", error);\n    }\n\n    // return fetch('http://localhost:3001/types')\n    // .then(response => response.json())\n    // .then(diets =>{\n    //     dispatch({\n    //         type:'GET_DIET_TYPE',\n    //         payload:diets\n    //     })\n    // } )\n    // .catch(e =>{\n    //     console.log('Error en api front',e)\n    // })\n    // }\n  };\n}\n\nexport function filterRecipeBYDiet(payload) {\n  return {\n    type: \"FILTER_RECIPE_DIET\",\n    payload,\n  };\n}\n\nexport function filterRecipeADS(payload) {\n  return {\n    type: \"FILTER_RECIPE_ADS\",\n    payload,\n  };\n}\n\nexport function postRecipe(payload) {\n  return async function (dispatch) {\n    const data = await axios.post(\"http://localhost:3001/mongo/recipe\", payload);\n    return data;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}