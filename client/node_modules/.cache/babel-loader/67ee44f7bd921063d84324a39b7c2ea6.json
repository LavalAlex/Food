{"ast":null,"code":"var _jsxFileName = \"/media/Alex/Proyectos/JUNGLE-OF-RECIPES/client/src/components/Details/Details.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams, Link, useLocation } from \"react-router-dom\";\nimport CardDetails from \"../Card/CardDetails\";\nimport { getRecipeID, getRecipeAllID } from \"../../actions\";\nimport { validateDetailts } from \"../../support/validate\";\nimport \"../../styles/Details.css\";\nimport RenderNavBar from \"../common/BarNav\";\nimport \"../../styles/NavRadio.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Details(prop) {\n  _s();\n\n  const dispatch = useDispatch();\n  var id = prop.match.params.id ? prop.match.params.id : null;\n  useEffect(() => {\n    dispatch(getRecipeID(id));\n  }, [dispatch]);\n  const idRecipe = useSelector(state => state.details);\n  const [input, setInput] = useState(''); //Function guarda el estado del imput\n\n  function handleChange(e) {\n    e.preventDefault();\n    setInput(e.target.value);\n  }\n\n  function handlerSearchID(e) {\n    e.preventDefault(); // var error = validateDetailts(input)\n\n    var errors = validateDetailts(input);\n\n    if (errors.id) {\n      alert(errors.id);\n      setInput('');\n    } else {\n      dispatch(getRecipeID(input));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-bar\",\n        children: /*#__PURE__*/_jsxDEV(RenderNavBar, {\n          nav: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conteiner-search\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-input\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Buscar receta por id...\",\n              name: \"name\",\n              onChange: e => handleChange(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-butto\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-search\",\n              type: \"submit\",\n              onClick: e => handlerSearchID(e),\n              children: \"Buscar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: idRecipe.length > 0 ? idRecipe.map(e => {\n        if (e.id === parseInt(id) && !e.createInDB || e.id === parseInt(input) && !e.createInDB) {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(CardDetails, {\n                name: e.name,\n                img: e.img,\n                diets: e.diets,\n                dishTypes: e.dishTypes,\n                score: e.score,\n                summary: e.summary,\n                id: id,\n                health: e.health,\n                step: e.step ? e.step : \"No hay pasos a seguir...\"\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this);\n        } else {\n          if (e.id === id && e.createInDB || e.id === input && e.createInDB) {\n            var diet = e.diets.map(d => d.name);\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CardDetails, {\n                  name: e.name,\n                  img: e.img,\n                  diets: diet,\n                  dishTypes: e.dishTypes,\n                  score: e.score,\n                  summary: e.summary,\n                  id: id,\n                  health: e.health,\n                  step: e.step\n                }, e.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 29\n                }, this)\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this);\n          }\n        }\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.gifer.com/VAyR.gif\",\n          alt: \"Not Found GIF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 107\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Details, \"AHQoyKmjdc0U9RAHdzuLUtX3Xn8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/media/Alex/Proyectos/JUNGLE-OF-RECIPES/client/src/components/Details/Details.jsx"],"names":["React","Fragment","useEffect","useState","useDispatch","useSelector","NavLink","useParams","Link","useLocation","CardDetails","getRecipeID","getRecipeAllID","validateDetailts","RenderNavBar","Details","prop","dispatch","id","match","params","idRecipe","state","details","input","setInput","handleChange","e","preventDefault","target","value","handlerSearchID","errors","alert","length","map","parseInt","createInDB","name","img","diets","dishTypes","score","summary","health","step","diet","d"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams, Link, useLocation } from \"react-router-dom\";\nimport CardDetails from \"../Card/CardDetails\";\nimport { getRecipeID, getRecipeAllID } from \"../../actions\";\nimport { validateDetailts } from \"../../support/validate\";\nimport \"../../styles/Details.css\"\nimport RenderNavBar from \"../common/BarNav\";\nimport \"../../styles/NavRadio.css\";\n\n\nexport default function Details (prop){\n    const dispatch = useDispatch();\n    var id = prop.match.params.id? prop.match.params.id:null;\n    \n    useEffect(() => {\n        dispatch(getRecipeID(id))\n    },[dispatch]);\n    \n    const idRecipe = useSelector((state) => state.details)\n    const [input, setInput] = useState('')\n\n    //Function guarda el estado del imput\n    function handleChange(e){\n        e.preventDefault();\n        setInput(e.target.value); \n        \n    }\n   \n    function handlerSearchID(e){\n        e.preventDefault();\n        // var error = validateDetailts(input)\n        var errors = validateDetailts(input)\n        if(errors.id){\n            alert(errors.id)\n            setInput('')\n        }else{\n            dispatch(getRecipeID(input))\n        }\n    }\n    \n    return(\n        <div className=\"frame\">\n          \n            <div className=\"header-details\">\n            {/* <NavLink to=\"/home\"><button className=\"btn-back\">Volver al Home</button></NavLink> */}\n            <div className=\"nav-bar\">\n\n            <RenderNavBar nav=\"3\"/>\n            </div>\n            <div className=\"search\">\n                <div className=\"conteiner-search\">\n                <div className=\"search-input\">\n                <input \n                    type= 'number'\n                    placeholder='Buscar receta por id...'\n                    name='name'\n                    onChange={ e => handleChange(e)}\n                />\n                </div>\n                <div className=\"search-butto\">\n                <button className=\"btn-search\" type='submit' onClick={ e => handlerSearchID(e)}>Buscar</button>          \n                </div>\n                </div>\n            </div>\n                \n                {/* <button className=\"btn-search\" type='submit' onClick={ e => handlerSearchID(e)}>Buscar</button> */}\n                {/* <Link to={`/details/${input}`} ><button >Buscar...</button></Link> */}\n            </div>\n            <div>\n            {idRecipe.length>0? idRecipe.map(e => {\n                if(e.id === parseInt(id) && !e.createInDB || e.id === parseInt(input) && !e.createInDB){\n                    return(\n                        <Fragment>\n                            <div key={e.id}>\n                            <CardDetails \n                                name={e.name} \n                                img={e.img} \n                                diets={e.diets} \n                                dishTypes={e.dishTypes}  \n                                key={e.id}\n                                score={e.score}\n                                summary={e.summary}\n                                id={id}\n                                health={e.health}\n                                step={e.step? e.step : \"No hay pasos a seguir...\"}    \n                            />\n                            </div>\n                        </Fragment>\n                )}else{ \n                    if(e.id === id && e.createInDB || e.id === input && e.createInDB ){\n                        var diet = e.diets.map(d => d.name)\n                    return(\n                        <Fragment>\n                            <div key={e.id}>\n                            <CardDetails \n                                name={e.name} \n                                img={e.img} \n                                diets={diet} \n                                dishTypes={e.dishTypes}  \n                                key={e.id}\n                                score={e.score}\n                                summary={e.summary}\n                                id={id}\n                                health={e.health}\n                                step={e.step}    \n                            />\n                            </div> \n                        </Fragment>\n                    )\n                }}\n                }): <div className=\"loading\"><img src=\"https://i.gifer.com/VAyR.gif\" alt=\"Not Found GIF\"/><span> Loading</span></div>\n            }\n            </div>\n        </div>\n\n    )   \n}\n"]},"metadata":{},"sourceType":"module"}